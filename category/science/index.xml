<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Science | World %&gt;% science::discover</title>
    <link>https://MauricioCely.github.io/category/science/</link>
      <atom:link href="https://MauricioCely.github.io/category/science/index.xml" rel="self" type="application/rss+xml" />
    <description>Science</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Iván Mauricio Cely Toro - 2021</copyright><lastBuildDate>Wed, 05 Aug 2020 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://MauricioCely.github.io/img/doc/avatar.jpg</url>
      <title>Science</title>
      <link>https://MauricioCely.github.io/category/science/</link>
    </image>
    
    <item>
      <title>Estimating $\pi$ using the Monte Carlo Method.</title>
      <link>https://MauricioCely.github.io/blog/2020/08/05/estimating-pi-using-the-monte-carlo-method/</link>
      <pubDate>Wed, 05 Aug 2020 00:00:00 +0000</pubDate>
      <guid>https://MauricioCely.github.io/blog/2020/08/05/estimating-pi-using-the-monte-carlo-method/</guid>
      <description>
&lt;script src=&#34;https://MauricioCely.github.io/blog/2020/08/05/estimating-pi-using-the-monte-carlo-method/index_files/accessible-code-block/empty-anchor.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://MauricioCely.github.io/blog/2020/08/05/estimating-pi-using-the-monte-carlo-method/index_files/vembedr/css/vembedr.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;https://MauricioCely.github.io/blog/2020/08/05/estimating-pi-using-the-monte-carlo-method/index_files/kePrint/kePrint.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;https://MauricioCely.github.io/blog/2020/08/05/estimating-pi-using-the-monte-carlo-method/index_files/lightable/lightable.css&#34; rel=&#34;stylesheet&#34; /&gt;

&lt;div id=&#34;TOC&#34;&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#introduction&#34;&gt;Introduction&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#monte-carlo-method&#34;&gt;Monte Carlo method&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#simulations-1-000-000-million-points&#34;&gt;Simulations: 1 000 000 million points&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#animations-code&#34;&gt;Animations code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;

&lt;p&gt;I always asked myself how the scientist have achieved a precise definition for this constant, I guess measuring the circumference with a string and dividing by its diameter is not the easiest way. For this reason in this post I want to show one of the multiples methods to estimate &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt;, that using some animations made with &lt;code&gt;ggplot&lt;/code&gt; and &lt;code&gt;gganimate&lt;/code&gt;.&lt;/p&gt;
&lt;div id=&#34;introduction&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;We all know that the symbol used by mathematicians to represent the ratio of a circle’s circumference to its diameter is the lowercase Greek letter &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt;.&lt;/p&gt;
&lt;span class=&#34;math display&#34;&gt;\[\pi =\frac{C}{d}\]&lt;/span&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:piratio&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;Pi_ratio.svg&#34; alt=&#34;The constant $\pi$ is defined as the ratio between the circunference to its diamater. *Source: [Wikipedia](https://en.wikipedia.org/wiki/File:Pi_eq_C_over_d.svg)*.&#34; width=&#34;300px&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 1: The constant &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt; is defined as the ratio between the circunference to its diamater. &lt;em&gt;Source: &lt;a href=&#34;https://en.wikipedia.org/wiki/File:Pi_eq_C_over_d.svg&#34;&gt;Wikipedia&lt;/a&gt;&lt;/em&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This ratio is constant, regardless of the circle’s size. &lt;strong&gt;pi&lt;/strong&gt; is perhaps the most famous of the irrational numbers, which means it can not be expressed as a common fraction converting it in an incommensurable number whose digits never settles into a permanently repeating pattern and appear to be randomly distributed.&lt;/p&gt;
&lt;p&gt;Nowadays &lt;a href=&#34;https://www.npr.org/2019/03/14/703566696/the-woman-who-calculated-31-trillion-digits-of-pi&#34;&gt;31 trillon digits&lt;/a&gt; of &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt; are known, but do we need really this level of accuracy? NASA indeed has answered this question in a very interesting article I recommend you &lt;a href=&#34;https://www.jpl.nasa.gov/edu/news/2016/3/16/how-many-decimals-of-pi-do-we-really-need/&#34;&gt;&lt;em&gt;How Many Decimals of Pi Do We Really Need?&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;monte-carlo-method&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Monte Carlo method&lt;/h1&gt;
&lt;p&gt;Monte Carlo methods are a subset of computational algorithms that use the process of repeated random sampling to make numerical estimations of unknown parameters. To estimate &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt; the method consists of drawing on a canvas a square with an inner circle. As we know the area of the circle is &lt;span class=&#34;math inline&#34;&gt;\(A_{\bigcirc} = \pi r^2\)&lt;/span&gt;, and the area of the square is &lt;span class=&#34;math inline&#34;&gt;\(A_{\square} = (2r)^2 = 4r^2\)&lt;/span&gt;, see Figure &lt;a href=&#34;#fig:squarecircle&#34;&gt;2&lt;/a&gt;.&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:squarecircle&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;square_circle_ratio.png&#34; alt=&#34;Circle and square areas.&#34; width=&#34;70%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 2: Circle and square areas.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;As shown below dividing the area of the circle, by the area of the square we get &lt;span class=&#34;math inline&#34;&gt;\(\pi /4\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[\frac{A_{\bigcirc}}{A_{\square}} = \frac{\pi \cancel{r^2}}{4 \cancel{r^2}} \Rightarrow \boxed{\pi = 4 \frac{A_{\bigcirc}}{A_{\square}}}\]&lt;/span&gt;
If a large number of random points inside the square is generated and the quantity of points inside the circle is counted.
We can use the following ratio to estimate Pi:&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;math display&#34;&gt;\[
\pi \approx 4 \frac{\text{number of points in the circle}}{\text{total number of points}}
\]&lt;/span&gt;
If you haven’t understand the process yet the following video gives a very clear and didactic explanation about it, this will help you for sure.&lt;/p&gt;
&lt;div class=&#34;vembedr embed-responsive embed-responsive-16by9&#34; align=&#34;center&#34;&gt;
&lt;div&gt;
&lt;iframe src=&#34;https://www.youtube.com/embed/ELetCV_wX_c&#34; width=&#34;533&#34; height=&#34;300&#34; frameborder=&#34;0&#34; allowfullscreen=&#34;&#34; class=&#34;embed-responsive-item&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id=&#34;simulations-1-000-000-million-points&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Simulations: 1 000 000 million points&lt;/h1&gt;
&lt;p&gt;To estimate &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt; we are going to plot randomly points using the &lt;code&gt;runif()&lt;/code&gt; function and then count how many of them are inside the circle. The canvas in this case is the &lt;em&gt;x-y&lt;/em&gt; plane, a square of side 2 units and an inner circle of radius 1 are plotted centered in the origin &lt;span class=&#34;math inline&#34;&gt;\((0,0)\)&lt;/span&gt;. The number of points inside the circle satisfies the condition &lt;span class=&#34;math inline&#34;&gt;\(\sqrt{x^{2}+y^{2}} \leq r\)&lt;/span&gt;, where &lt;span class=&#34;math inline&#34;&gt;\(r\)&lt;/span&gt; has to be 1 in our case, the radius of the unit circle. The idea now is to estimate &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt; as increasing the number of points, in the code below if the point falls inside the circle was assigned &lt;span class=&#34;math inline&#34;&gt;\(1\)&lt;/span&gt; otherwise it is &lt;span class=&#34;math inline&#34;&gt;\(0\)&lt;/span&gt;.&lt;/p&gt;
&lt;p&gt;In figure &lt;a href=&#34;#fig:facet-points&#34;&gt;3&lt;/a&gt;, &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt; is estimated for 6 different simulations with different sample size to assess how the estimates vary.&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:facet-points&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;powers-of-ten.png&#34; alt=&#34;Estimation of $\pi$ for different point quantities. Points are randomly scattered inside the square, some fall within the unit circle.&#34; width=&#34;80%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 3: Estimation of &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt; for different point quantities. Points are randomly scattered inside the square, some fall within the unit circle.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Results for some values of &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt; are shown in the Table &lt;a href=&#34;#tab:table-pi&#34;&gt;1&lt;/a&gt;.&lt;/p&gt;
&lt;table class=&#34;table table-striped&#34; style=&#34;margin-left: auto; margin-right: auto;&#34;&gt;
&lt;caption&gt;
&lt;span id=&#34;tab:table-pi&#34;&gt;Table 1: &lt;/span&gt;Some values of &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt; estimated using numerical simulations.
&lt;/caption&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
Number of points
&lt;/th&gt;
&lt;th style=&#34;text-align:center;&#34;&gt;
Estimation of &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt;
&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
10
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
3.200000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
100
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
3.280000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
1000
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
3.192000
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
10000
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
3.121600
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
100000
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
3.144520
&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
1000000
&lt;/td&gt;
&lt;td style=&#34;text-align:center;&#34;&gt;
3.141972
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Figure &lt;a href=&#34;#fig:simulation-animation&#34;&gt;4&lt;/a&gt; represents the same results shown previously but as an animation, this allow us to understand better the how pi accuracy increases as the sample size do same.&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:simulation-animation&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;animation_canvas.gif&#34; alt=&#34;Numerical approximation of $\pi$.&#34; width=&#34;80%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 4: Numerical approximation of &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt;.
&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Figure below show &lt;code&gt;R&lt;/code&gt; pi constant value as an horizontal &lt;span style=&#34;color:red&#34;&gt;red&lt;/span&gt; line. It is seen the convergence to the constant pi is related with the sample size. A sample size of 1,000,000 is used for this simulation.&lt;/p&gt;
&lt;div class=&#34;figure&#34; style=&#34;text-align: center&#34;&gt;&lt;span id=&#34;fig:approx-animation&#34;&gt;&lt;/span&gt;
&lt;img src=&#34;approx_pi.gif&#34; alt=&#34;Estimation of $\pi$ by sample size. The value is better as the sample points increases.&#34; width=&#34;80%&#34; /&gt;
&lt;p class=&#34;caption&#34;&gt;
Figure 5: Estimation of &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt; by sample size. The value is better as the sample points increases.
&lt;/p&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;⚠ &lt;strong&gt;NOTE&lt;/strong&gt;: For the curious people in &lt;code&gt;R&lt;/code&gt; the &lt;span class=&#34;math inline&#34;&gt;\(\pi\)&lt;/span&gt; number is defined by default up to 48 digits.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3.141592653589793115997963468544185161590576171875&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I hope this short post had been helpful to you. If you have any opinion, suggestion or critic all comments are received, please write me.&lt;/p&gt;
&lt;p&gt;Until next time!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;animations-code&#34; class=&#34;section level1&#34;&gt;
&lt;h1&gt;Animations code&lt;/h1&gt;
&lt;p&gt;If you want to reproduce the images and the animations which I used in this post, the complete code can be found &lt;a href=&#34;https://github.com/MauricioCely/utilities_R&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>
